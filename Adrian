expresionOpcional
    : expresion	{ $$.tipo = $1.tipo; $$.valor = $1.valor;}
    | ID_ ASIG_ expresion
    { 	
        SIMB s = obtenerTDS($1);
		if (s.tipo == T_ERROR) 
			yyerror("Objeto no declarado");
		else if (!( (s.tipo == $3.tipo && s.tipo == T_ENTERO)||(s.tipo == $3.tipo && s.tipo == T_LOGICO) ))
			yyerror("Error de tipos en la 'instruccionAsignacion'");
		else $$.tipo = s.tipo;
        
        $$.pos = creaVarTemp();
        if ($2 == EASIG)
            emite(EASIG, crArgPos($3.pos), crArgNul(), crArgPos($$.pos));
        else
            emite($2, crArgPos(s.desp), crArgPos($3.pos), crArgPos($$.pos));
        emite(EASIG, crArgPos($$.pos), crArgNul(), crArgPos(s.desp)); 
    }
/*Pegarle un vistazo ha esta expresion que no se me ocurre como puede ser (A = True && False) una cosa asi*/
    | { $$.tipo = T_LOGICO; }
    ;

expresion
    : expresionIgualdad { $$.tipo = $1.tipo; $$.valor = $1.valor;} 
    | expresion operadorLogico expresionIgualdad 
		{
            $$.tipo = T_ERROR;
            if ( $1.tipo != T_ERROR && $3.tipo != T_ERROR )
            {
                if ( $1.tipo != $3.tipo ) {
                    yyerror( "Los tipos no coinciden en la expresion" );                
                } else {
                    $$.tipo = T_LOGICO;
                    if ($2 == OP_OR)
                        $$.valor = $1.valor || $3.valor ? TRUE : FALSE;
                    else if ($2 == OP_AND)
                        $$.valor = $1.valor && $3.valor ? TRUE : FALSE;

                   
                }
            }
            $$.pos = creaVarTemp();
            overrideValue = $2 == OP_AND ? FALSE : TRUE;
            emite(EASIG, crArgPos($3.pos), crArgNul(), crArgPos($$.pos));
            emite(EDIST, crArgPos($1.pos), crArgEnt(overrideValue), crArgEtq(si + 2));
            emite(EASIG, crArgEnt(overrideValue), crArgNul(), crArgPos($$.pos)); 
        }
    ;

expresionIgualdad
    : expresionRelacional { $$.tipo = $1.tipo; $$.valor = $1.valor;}
    | expresionIgualdad operadorIgualdad expresionRelacional
        {
            $$.tipo = T_ERROR;
            if ( $1.tipo != T_ERROR && $3.tipo != T_ERROR )
            {
                if ( $1.tipo != $3.tipo ) {
                    yyerror( "Los tipos no coinciden en la igualdad" );
                } else if ( $1.tipo == T_ARRAY ) {
                    yyerror( "El operador de igualdad no se puede aplicar en los arrays" );                
                } else {
                    $$.tipo = T_LOGICO;
                    if ($2 == EIGUAL)
                        $$.valor = $1.valor == $3.valor ? TRUE : FALSE;
                    else if ($2 == EDIST)
                        $$.valor = $1.valor != $3.valor ? TRUE : FALSE;
                }
            }
            $$.pos = creaVarTemp();
            emite(EASIG, crArgEnt(TRUE), crArgNul(), crArgPos($$.pos));
            emite($2, crArgPos($1.pos), crArgPos($3.pos), crArgEtq(si + 2));
            emite(EASIG, crArgEnt(FALSE), crArgNul(), crArgPos($$.pos)); }
        }
    ;
